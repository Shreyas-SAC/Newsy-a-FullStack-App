{"ast":null,"code":"import React from \"react\";\nimport { toast } from \"../helpers/toast\";\n\nfunction useForm(initialState, validate, action) {\n  const [values, setValues] = React.useState(initialState);\n  const [errors, setErrors] = React.useState({});\n  const [isSubmitting, setSubmitting] = React.useState(false);\n  React.useEffect(() => {\n    if (isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n\n      if (noErrors) {\n        action();\n        setValues(initialState);\n        setSubmitting(false);\n      } else {\n        toast(Object.values(errors).join(\" \"));\n        setSubmitting(false);\n      }\n    } //eslint-disabled-next-line\n\n  }, [errors]);\n\n  function handleChange(event) {\n    setValues(previousValues => ({ ...previousValues,\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  function handleSubmit() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  }\n\n  return {\n    handleSubmit,\n    handleChange,\n    values,\n    setValues,\n    isSubmitting\n  };\n}\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/shrey/Desktop/ReactProject/Newsy/src/hooks/useForm.js"],"names":["React","toast","useForm","initialState","validate","action","values","setValues","useState","errors","setErrors","isSubmitting","setSubmitting","useEffect","noErrors","Object","keys","length","join","handleChange","event","previousValues","target","name","value","handleSubmit","validationErrors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;AAEA,SAASC,OAAT,CAAiBC,YAAjB,EAA+BC,QAA/B,EAAyCC,MAAzC,EAAiD;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,KAAK,CAACQ,QAAN,CAAeL,YAAf,CAA5B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACG,YAAD,EAAeC,aAAf,IAAgCZ,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAtC;AAEAR,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,QAAIF,YAAJ,EAAkB;AAChB,YAAMG,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBQ,MAApB,KAA+B,CAAhD;;AACA,UAAIH,QAAJ,EAAc;AACZT,QAAAA,MAAM;AACNE,QAAAA,SAAS,CAACJ,YAAD,CAAT;AACAS,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAJD,MAIO;AACLX,QAAAA,KAAK,CAACc,MAAM,CAACT,MAAP,CAAcG,MAAd,EAAsBS,IAAtB,CAA2B,GAA3B,CAAD,CAAL;AACAN,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,KAXmB,CAYpB;;AACD,GAbD,EAaG,CAACH,MAAD,CAbH;;AAeA,WAASU,YAAT,CAAsBC,KAAtB,EAA6B;AAC3Bb,IAAAA,SAAS,CAAEc,cAAD,KAAqB,EAC7B,GAAGA,cAD0B;AAE7B,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAFL,KAArB,CAAD,CAAT;AAID;;AAED,WAASC,YAAT,GAAwB;AACtB,UAAMC,gBAAgB,GAAGtB,QAAQ,CAACE,MAAD,CAAjC;AACAI,IAAAA,SAAS,CAACgB,gBAAD,CAAT;AACAd,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAED,SAAO;AACLa,IAAAA,YADK;AAELN,IAAAA,YAFK;AAGLb,IAAAA,MAHK;AAILC,IAAAA,SAJK;AAKLI,IAAAA;AALK,GAAP;AAOD;;AAED,eAAeT,OAAf","sourcesContent":["import React from \"react\";\r\nimport { toast } from \"../helpers/toast\";\r\n\r\nfunction useForm(initialState, validate, action) {\r\n  const [values, setValues] = React.useState(initialState);\r\n  const [errors, setErrors] = React.useState({});\r\n  const [isSubmitting, setSubmitting] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (isSubmitting) {\r\n      const noErrors = Object.keys(errors).length === 0;\r\n      if (noErrors) {\r\n        action();\r\n        setValues(initialState);\r\n        setSubmitting(false);\r\n      } else {\r\n        toast(Object.values(errors).join(\" \"));\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n    //eslint-disabled-next-line\r\n  }, [errors]);\r\n\r\n  function handleChange(event) {\r\n    setValues((previousValues) => ({\r\n      ...previousValues,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  }\r\n\r\n  function handleSubmit() {\r\n    const validationErrors = validate(values);\r\n    setErrors(validationErrors);\r\n    setSubmitting(true);\r\n  }\r\n\r\n  return {\r\n    handleSubmit,\r\n    handleChange,\r\n    values,\r\n    setValues,\r\n    isSubmitting,\r\n  };\r\n}\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}