{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\shrey\\\\Desktop\\\\ReactProject\\\\Newsy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\shrey\\\\Desktop\\\\ReactProject\\\\Newsy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";import firebase from\"../../firebase\";import LinkItem from\"./LinkItem\";var LinkList=function LinkList(props){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),links=_React$useState2[0],setLinks=_React$useState2[1];var isTrending=props.location.pathname.includes(\"trending\");React.useEffect(function(){var unsubscribe=getLinks();return function(){return unsubscribe();};// eslint-disable-next-line\n},[isTrending]);function getLinks(){if(isTrending){return firebase.db.collection(\"links\").orderBy(\"voteCount\",\"desc\").onSnapshot(handleSnapshot);}return firebase.db.collection(\"links\").orderBy(\"created\",\"desc\").onSnapshot(handleSnapshot);}function handleSnapshot(snapshot){var links=snapshot.docs.map(function(doc){return _objectSpread({id:doc.id},doc.data());});setLinks(links);}return/*#__PURE__*/React.createElement(React.Fragment,null,links.map(function(link,index){return/*#__PURE__*/React.createElement(LinkItem,{key:link.id,showCount:true,url:\"/link/\".concat(link.id),link:link,index:index+1});}));};export default LinkList;","map":{"version":3,"sources":["C:/Users/shrey/Desktop/ReactProject/Newsy/src/components/Link/LinkList.js"],"names":["React","firebase","LinkItem","LinkList","props","useState","links","setLinks","isTrending","location","pathname","includes","useEffect","unsubscribe","getLinks","db","collection","orderBy","onSnapshot","handleSnapshot","snapshot","docs","map","doc","id","data","link","index"],"mappings":"mVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,qBACAJ,KAAK,CAACK,QAAN,CAAe,EAAf,CADA,oDACnBC,KADmB,qBACZC,QADY,qBAE1B,GAAMC,CAAAA,UAAU,CAAGJ,KAAK,CAACK,QAAN,CAAeC,QAAf,CAAwBC,QAAxB,CAAiC,UAAjC,CAAnB,CAEAX,KAAK,CAACY,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,WAAW,CAAGC,QAAQ,EAA5B,CACA,MAAO,kBAAMD,CAAAA,WAAW,EAAjB,EAAP,CACA;AACD,CAJD,CAIG,CAACL,UAAD,CAJH,EAMA,QAASM,CAAAA,QAAT,EAAoB,CAClB,GAAIN,UAAJ,CAAgB,CACd,MAAOP,CAAAA,QAAQ,CAACc,EAAT,CACJC,UADI,CACO,OADP,EAEJC,OAFI,CAEI,WAFJ,CAEiB,MAFjB,EAGJC,UAHI,CAGOC,cAHP,CAAP,CAID,CACD,MAAOlB,CAAAA,QAAQ,CAACc,EAAT,CACJC,UADI,CACO,OADP,EAEJC,OAFI,CAEI,SAFJ,CAEe,MAFf,EAGJC,UAHI,CAGOC,cAHP,CAAP,CAID,CAED,QAASA,CAAAA,cAAT,CAAwBC,QAAxB,CAAkC,CAChC,GAAMd,CAAAA,KAAK,CAAGc,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,SAACC,GAAD,CAAS,CACvC,sBAASC,EAAE,CAAED,GAAG,CAACC,EAAjB,EAAwBD,GAAG,CAACE,IAAJ,EAAxB,EACD,CAFa,CAAd,CAGAlB,QAAQ,CAACD,KAAD,CAAR,CACD,CAED,mBACE,wCACGA,KAAK,CAACgB,GAAN,CAAU,SAACI,IAAD,CAAOC,KAAP,qBACT,oBAAC,QAAD,EACE,GAAG,CAAED,IAAI,CAACF,EADZ,CAEE,SAAS,CAAE,IAFb,CAGE,GAAG,iBAAWE,IAAI,CAACF,EAAhB,CAHL,CAIE,IAAI,CAAEE,IAJR,CAKE,KAAK,CAAEC,KAAK,CAAG,CALjB,EADS,EAAV,CADH,CADF,CAaD,CA3CD,CA6CA,cAAexB,CAAAA,QAAf","sourcesContent":["import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport LinkItem from \"./LinkItem\";\r\n\r\nconst LinkList = (props) => {\r\n  const [links, setLinks] = React.useState([]);\r\n  const isTrending = props.location.pathname.includes(\"trending\");\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = getLinks();\r\n    return () => unsubscribe();\r\n    // eslint-disable-next-line\r\n  }, [isTrending]);\r\n\r\n  function getLinks() {\r\n    if (isTrending) {\r\n      return firebase.db\r\n        .collection(\"links\")\r\n        .orderBy(\"voteCount\", \"desc\")\r\n        .onSnapshot(handleSnapshot);\r\n    }\r\n    return firebase.db\r\n      .collection(\"links\")\r\n      .orderBy(\"created\", \"desc\")\r\n      .onSnapshot(handleSnapshot);\r\n  }\r\n\r\n  function handleSnapshot(snapshot) {\r\n    const links = snapshot.docs.map((doc) => {\r\n      return { id: doc.id, ...doc.data() };\r\n    });\r\n    setLinks(links);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {links.map((link, index) => (\r\n        <LinkItem\r\n          key={link.id}\r\n          showCount={true}\r\n          url={`/link/${link.id}`}\r\n          link={link}\r\n          index={index + 1}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LinkList;\r\n"]},"metadata":{},"sourceType":"module"}